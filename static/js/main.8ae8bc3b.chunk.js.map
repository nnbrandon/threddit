{"version":3,"sources":["components/Posts/Posts.module.scss","components/Navbar/Navbar.module.scss","shared/Modal/Modal.module.scss","components/GoToSubreddit/GoToSubreddit.module.scss","components/AddSubreddit/AddSubreddit.module.scss","shared/TextInput/TextInput.module.scss","components/Dashboard/Dashboard.module.scss","shared/Button/Button.module.scss","components/Icons/Spinner.module.scss","components/Comments/Comments.module.scss","shared/Button/Button.js","components/Navbar/Navbar.js","components/Comments/PostSection.js","components/Icons/Spinner.js","components/Icons/Hamburger.js","components/Comments/Comment.js","Reddit/comment.js","Reddit/post.js","Reddit/comments.js","components/Comments/CommentsOverview.js","components/Posts/Post.js","components/Posts/InfiniteScroll.js","shared/TextInput/TextInput.js","shared/Modal/Modal.js","components/GoToSubreddit/GoToSubreddit.js","Reddit/subreddits.js","components/AddSubreddit/AddSubreddit.js","Reddit/posts.js","components/Posts/PostsView.js","components/Dashboard/DashboardRouter.js","components/Dashboard/Dashboard.js","components/ThredditRouter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","type","onClickEvent","label","className","styles","button","onClick","Navbar","navData","selectedSubreddit","onCloseNav","onShowGoToSubreddit","onShowAddSubreddit","subreddit","renderNavData","map","data","index","selectedStyle","path","to","text","sidebar","alt","size","nav","buttons","buttonLayout","PostSection","renderPostSection","post","title","score","num_comments","prefixedAuthor","getPrefixedAuthor","date","timeSince","previewSource","getPreviewSource","text_html","he","decode","undefined","url","href","target","rel","preview","previewImg","src","subreddit_name_prefixed","postSection","postSectionPreview","textHtml","dangerouslySetInnerHTML","__html","Fragment","Spinner","icon","spinner","Hamburger","Comment","comment","body_html","id","depth","style","marginLeft","this","author","created_utc","body","commentId","name","parent_id","datePosted","Date","seconds","Math","floor","interval","Post","postId","is_video","subreddit_id","selftext","selftext_html","thumbnail","thumbnail_height","thumbnail_width","height","width","images","length","source","replace","toLowerCase","fetchComments","fetchPost","a","axios","get","result","console","log","status","Error","children","commentsObject","comments","flattenComments","childrenArr","reduce","accum","current","replies","flattenedReplies","push","getCommentsUrlJSON","CommentsOverview","selectedPost","onCloseComments","match","showNavBar","params","useState","setComments","setPost","virtuosoRef","useRef","commentIndexRef","startIndex","endIndex","currentCommentIndex","didFirstClick","useEffect","document","addEventListener","removeEventListener","commentsUrlJSON","error","fetch","backArrow","RenderedPostHeader","useCallback","postSectionWrapper","RenderedComment","commentWrapper","LoadingFooter","loading","container","postSectionHeader","hamburger","arrowDown","nextIndex","currentIndex","scrollToIndex","align","behavior","color","commentsContainer","commentsSection","ref","rangeChanged","indices","itemContent","components","Header","Footer","isHome","onClickPost","commentsPath","subredditSection","link","marginTop","InfiniteScroll","postList","loadNextPage","RenderedPost","postWrapper","endReached","TextInput","locked","focused","value","onChange","active","setActive","inputValue","setInputValue","inputError","setInputError","fieldClassName","field","placeholder","event","onFocus","onBlur","htmlFor","Modal","modalSize","onClose","wrapperRef","innerRef","smallModalBox","normalModalBox","handleClickOutside","contains","modalContainer","GoToSubreddit","setSubreddit","history","useHistory","layout","closeButton","subredditInput","goButton","preventDefault","fetchSubreddits","sortedSubreddits","Object","keys","localStorage","key","getItem","sort","b","lowercasedA","lowercasedB","addSubreddit","setItem","isSubscribed","AddSubreddit","addButton","fetchPosts","currentAfter","subreddits","filter","replaceAll","substring","requestUrl","after","posts","extractPosts","nextAfter","child","PostsView","setPostList","setAfter","setSelectedPost","setShowNavBar","showGoToSubreddit","setShowGoToSubreddit","showAddSubreddit","setShowAddSubreddit","keyCode","renderCommentsOverview","props","subredditText","render","heart","removeItem","removeSubreddit","setTimeout","prevPostList","err","loadMore","DashboardRouter","renderHome","renderSubreddit","exact","Dashboard","setSubreddits","content","ThredditRouter","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","smoothscroll","polyfill","documentElement","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ae8bc3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__3vF_i\",\"posts\":\"Posts_posts__fNhWU\",\"subredditText\":\"Posts_subredditText__cTroL\",\"hamburger\":\"Posts_hamburger__d_e42\",\"link\":\"Posts_link__JEwjG\",\"postWrapper\":\"Posts_postWrapper__5hsp2\",\"loading\":\"Posts_loading__3ZzJ9\",\"post\":\"Posts_post__LyNp_\",\"thumbnail\":\"Posts_thumbnail__OSOEU\",\"selectedPost\":\"Posts_selectedPost__2kv0K\",\"heart\":\"Posts_heart__2tyg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__mwQyv\",\"buttons\":\"Navbar_buttons__3W0vS\",\"buttonLayout\":\"Navbar_buttonLayout__2VQ-d\",\"selectedSubreddit\":\"Navbar_selectedSubreddit__zvZa5\",\"nav\":\"Navbar_nav__3cHYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__Nc-xq\",\"modalContainer\":\"Modal_modalContainer__1CKZv\",\"smallModalBox\":\"Modal_smallModalBox__2FFp1\",\"normalModalBox\":\"Modal_normalModalBox__3o1l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"GoToSubreddit_layout__21D0p\",\"subredditInput\":\"GoToSubreddit_subredditInput__m12PC\",\"goButton\":\"GoToSubreddit_goButton__6dCc-\",\"closeButton\":\"GoToSubreddit_closeButton__3W8HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"AddSubreddit_layout__2jH53\",\"subredditInput\":\"AddSubreddit_subredditInput__2Ks9l\",\"addButton\":\"AddSubreddit_addButton__3gyg4\",\"closeButton\":\"AddSubreddit_closeButton__3_fe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"TextInput_field__3Nkmt\",\"active\":\"TextInput_active__3dxBt\",\"locked\":\"TextInput_locked___Exol\",\"error\":\"TextInput_error__2rUuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__205D7\",\"content\":\"Dashboard_content__1OVLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__CftuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__-Zzob\",\"spin\":\"Spinner_spin__rZPQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comments_container__2gEP4\",\"commentWrapper\":\"Comments_commentWrapper__KaDj2\",\"commentsContainer\":\"Comments_commentsContainer__3yUU3\",\"hamburger\":\"Comments_hamburger__1FiW_\",\"backArrow\":\"Comments_backArrow__3geJG\",\"loading\":\"Comments_loading__2kYMG\",\"comment\":\"Comments_comment__3yO4C\",\"postSectionWrapper\":\"Comments_postSectionWrapper__2eTTK\",\"postSection\":\"Comments_postSection__1iARa\",\"postSectionHeader\":\"Comments_postSectionHeader__1YSqL\",\"postSectionPreview\":\"Comments_postSectionPreview__39AzW\",\"closeButton\":\"Comments_closeButton__3YHDJ\",\"arrowDown\":\"Comments_arrowDown__3ELnp\",\"previewImg\":\"Comments_previewImg__Xck6t\",\"textHtml\":\"Comments_textHtml__3XLtl\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nfunction Button({type, onClickEvent, label}) {\n    return (\n        <button type=\"submit\" className={styles.button} onClick={onClickEvent}>{label}</button>\n    )\n}\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosClose } from 'react-icons/io';\n\nimport styles from './Navbar.module.scss';\nimport Button from '../../shared/Button/Button';\n\nfunction Navbar({ navData, selectedSubreddit, onCloseNav, onShowGoToSubreddit, onShowAddSubreddit }) {\n  const subreddit = selectedSubreddit ? '/r/' + selectedSubreddit : '';\n  const renderNavData = navData.map((data, index) => {\n    let selectedStyle;\n    if (\n      subreddit === data.path ||\n      (subreddit === '' && data.path === '/home')\n    ) {\n      selectedStyle = styles.selectedSubreddit;\n    }\n    return (\n      <li key={index}>\n        <Link className={selectedStyle} to={data.path}>\n          {data.text}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <div className={styles.sidebar}>\n      <span>\n        <IoIosClose alt=\"Close\" onClick={onCloseNav} size=\"50px\" />\n      </span>\n      <nav className={styles.nav}>\n        <ul>{renderNavData}</ul>\n      </nav>\n      <div className={styles.buttons}>\n        <span className={styles.buttonLayout}>\n          <Button onClickEvent={onShowGoToSubreddit} label=\"Go to Subreddit\"/>\n        </span>\n        <span className={styles.buttonLayout}>\n          <Button onClickEvent={onShowAddSubreddit} label=\"Add Subreddit\"/>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport he from 'he';\n\nimport styles from './Comments.module.scss';\n\nfunction PostSection({ post }) {\n  let renderPostSection;\n  if (post) {\n    const { title, score, num_comments } = post;\n    const prefixedAuthor = post.getPrefixedAuthor();\n    const date = post.timeSince();\n    const previewSource = post.getPreviewSource();\n\n    const text = post.text_html ? he.decode(post.text_html) : undefined;\n    const url = post.url ? (\n      <a href={post.url} target=\"_blank\" rel=\"noreferrer\">\n        {post.url}\n      </a>\n    ) : undefined;\n    const preview = previewSource ? (\n      <img\n        className={styles.previewImg}\n        src={previewSource.url}\n        alt={`${post.subreddit_name_prefixed} - ${post.title}`}\n      />\n    ) : undefined;\n\n    renderPostSection = (\n      <div className={styles.postSection}>\n        <div>\n          r/{post.subreddit} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {url}\n        <br />\n        <div className={styles.postSectionPreview}>{preview}</div>\n        <div\n          className={styles.textHtml}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n\n        <br />\n        <div>\n          {score} score | {num_comments} comments\n        </div>\n      </div>\n    );\n  }\n\n  return <React.Fragment>{renderPostSection}</React.Fragment>;\n}\n\nexport default PostSection;\n","import React from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport styles from './Spinner.module.scss';\n\nfunction Spinner({ size }) {\n  return (\n    <FaSpinner\n      alt=\"Loading...\"\n      icon=\"spinner\"\n      className={styles.spinner}\n      size={'40px' || size}\n    />\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { GiHamburgerMenu } from 'react-icons/gi';\n\nfunction Hamburger({ onClick, size }) {\n  const iconSize = '30px' || size;\n  return <GiHamburgerMenu onClick={onClick} size={iconSize} />;\n}\n\nexport default Hamburger;\n","import React from 'react';\nimport he from 'he';\nimport styles from './Comments.module.scss';\n\nfunction Comment({ comment }) {\n  const { score, body_html, id, depth } = comment;\n  const prefixedAuthor = comment.getPrefixedAuthor();\n  const date = comment.timeSince();\n\n  let text;\n  if (body_html) {\n    text = he.decode(body_html);\n  }\n\n  return (\n    <div className={styles.comment} key={id} style={{marginLeft: `${depth * 0.8 + 5}%`}}>\n      <div>\n        Posted by {prefixedAuthor} {date}\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: text }} />\n      <br />\n      <div>\n        {score} score | Comment depth: {depth}\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","export class Comment {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.body = data.body;\n    this.body_html = data.body_html;\n    this.depth = data.depth;\n    this.id = data.id;\n    this.commentId = data.name;\n    this.parent_id = data.parent_id;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","export class Post {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.id = data.id;\n    this.postId = data.name;\n    this.is_video = data.is_video;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_id = data.subreddit_id;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n    this.title = data.title;\n    this.url = data.url;\n    this.num_comments = data.num_comments;\n    this.text = data.selftext;\n    this.text_html = data.selftext_html;\n    this.preview = data.preview;\n    this.is_video = data.is_video;\n\n    this.thumbnail =\n      data.url && data.thumbnail_height && data.thumbnail_width\n        ? {\n            url: data.thumbnail,\n            height: data.thumbnail_height,\n            width: data.thumbnail_width,\n          }\n        : undefined;\n  }\n\n  getPreviewSource() {\n    if (\n      this.preview &&\n      this.preview.images &&\n      this.preview.images.length > 0 &&\n      !this.is_video\n    ) {\n      const { source } = this.preview.images[0];\n      if (!source) {\n        return undefined;\n      }\n      return {\n        height: source.height,\n        width: source.width,\n        url: source.url.replace('amp;', ''),\n      };\n    }\n    return undefined;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  getLowerCasedSubreddit() {\n    return this.subreddit.toLowerCase();\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","import axios from 'axios';\nimport { Comment } from './comment';\nimport { Post } from './post';\n\nexport async function fetchComments(url, fetchPost) {\n  let result;\n  try {\n    result = await axios.get(`${url}?limit=50`);\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error('Unable to fetch comments');\n    }\n  } catch (err) {\n    throw new Error('Unable to fetch comments');\n  }\n\n  if (result && result.data) {\n    let post;\n    if (fetchPost) {\n      post = new Post(result.data[0].data.children[0].data); // TODO: Fix hack\n    }\n\n    const commentsObject = result.data[1];\n    if (!commentsObject) {\n      throw new Error('Unable to fetch comments');\n    }\n    const { data } = commentsObject;\n    if (!data) {\n      throw new Error('Unable to fetch comments');\n    }\n\n    const { children } = data;\n    const comments = flattenComments(children);\n    return {\n      post,\n      comments,\n    };\n  }\n}\n\nfunction flattenComments(childrenArr) {\n  return childrenArr.reduce((accum, current) => {\n    const { data } = current;\n    const comment = new Comment(data);\n    if (data.replies) {\n      const { children } = data.replies.data;\n      const flattenedReplies = flattenComments(children);\n      accum.push(comment);\n      accum = [...accum, ...flattenedReplies];\n    } else {\n      accum.push(comment);\n    }\n    return accum;\n  }, []);\n}\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { IoIosArrowBack, IoIosClose, IoIosArrowDropdownCircle as DropdownArray } from 'react-icons/io';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport styles from './Comments.module.scss';\nimport PostSection from './PostSection';\nimport Spinner from '../Icons/Spinner';\nimport Hamburger from '../Icons/Hamburger';\nimport Comment from './Comment';\n\nimport { fetchComments } from '../../Reddit/comments';\n\nfunction getCommentsUrlJSON(subreddit, postId) {\n  return `https://www.reddit.com/r/${subreddit}/comments/${postId}.json`;\n}\n\nfunction CommentsOverview({\n  selectedPost,\n  onCloseComments,\n  match,\n  onCloseNav,\n  showNavBar,\n}) {\n  const { postId, subreddit } = match.params;\n  const [comments, setComments] = useState([]);\n  const [post, setPost] = useState(selectedPost);\n  const virtuosoRef = useRef(null);\n  const commentIndexRef = useRef({\n    startIndex: 0,\n    endIndex: 0\n  });\n  const currentCommentIndex = useRef(0);\n  const didFirstClick = useRef(false);\n\n  useEffect(() => {\n    document.addEventListener('keydown', onCloseComments);\n    return () => {\n      document.removeEventListener('keydown', onCloseComments);\n      setComments([]);\n      setPost(undefined);\n    };\n  }, [onCloseComments]);\n\n  useEffect(() => {\n    async function fetch() {\n      const commentsUrlJSON = getCommentsUrlJSON(subreddit, postId);\n      try {\n        const { post, comments } = await fetchComments(\n          commentsUrlJSON,\n          !selectedPost,\n        );\n      \n        if (!selectedPost) {\n          setPost(post);\n        }\n\n        setComments(comments);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, postId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function scrollToNextComment() {\n    if (virtuosoRef.current) {\n      const currentIndex = currentCommentIndex.current;\n      let nextIndex;\n      if (!didFirstClick.current) {\n        didFirstClick.current = true;\n        nextIndex = currentIndex;\n      } else {\n        nextIndex = currentIndex + 1;\n      }\n\n      for (;nextIndex < comments.length; nextIndex++) {\n        if (comments[nextIndex].depth === 0) {\n          break;\n        }\n      }\n\n      currentCommentIndex.current = nextIndex;\n\n      virtuosoRef.current.scrollToIndex({\n        index: nextIndex,\n        align: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  function setCommentsRange(indices) {\n    commentIndexRef.current = indices\n    const { startIndex, endIndex } = commentIndexRef.current;\n    console.log(commentIndexRef.current);\n    if (currentCommentIndex.current < startIndex || currentCommentIndex.current > endIndex) {\n      console.log('currentCommentIndex is out of range');\n      if (!didFirstClick.current) {\n        didFirstClick.current = true;\n      }\n      currentCommentIndex.current = startIndex;\n    }\n  }\n\n  const backArrow = showNavBar ? (\n    <IoIosArrowBack\n      className={styles.backArrow}\n      alt=\"Back\"\n      onClick={onCloseComments}\n      size=\"30px\"\n    />\n  ) : (\n    <span />\n  );\n  const RenderedPostHeader = useCallback(() => {\n    return (\n      <div className={styles.postSectionWrapper}>\n        <PostSection post={post} onCloseComments={onCloseComments} />\n      </div>\n    );\n  }, [post, onCloseComments]);\n\n  // Render a Comment\n  const RenderedComment = useCallback((index) => {\n    const comment = comments[index]\n    return (\n      <div className={styles.commentWrapper}>\n        {/* <span>{index}</span> */}\n        <Comment\n          key={comment.id}\n          comment={comment}\n        />\n      </div>\n    );\n  }, [comments]);\n\n  const LoadingFooter = useCallback(() => {\n    const spinner = (\n      <div className={styles.loading}>\n        <Spinner />\n      </div>\n    )\n    return spinner;\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postSectionHeader}>\n        <span className={styles.hamburger}>\n          {!showNavBar && <Hamburger onClick={onCloseNav} />}\n          {backArrow}\n        </span>\n        <div>\n          <IoIosClose alt=\"Close\" onClick={onCloseComments} size=\"40px\"/>\n        </div>\n      </div>\n      <div className={styles.arrowDown}>\n        <DropdownArray alt=\"Next Comment\" onClick={scrollToNextComment} size=\"50px\" color=\"#4fbcff\"/>\n      </div>\n      <div className={styles.commentsContainer}>\n        <div className={styles.commentsSection}>\n          <Virtuoso \n            ref={virtuosoRef}\n            rangeChanged={setCommentsRange}\n            style={{height: \"100vh\", width: \"100%\"}}\n            data={comments}\n            itemContent={RenderedComment}\n            components={{\n              Header: RenderedPostHeader,\n              Footer: LoadingFooter\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentsOverview;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Posts.module.scss';\n\nfunction Post({ isHome, post, onClickPost }) {\n  const { title, score, num_comments } = post;\n  const prefixedAuthor = post.getPrefixedAuthor();\n  const date = post.timeSince();\n  const commentsPath = isHome\n    ? `/home/r/${post.subreddit}/comments/${post.id}`\n    : `/r/${post.subreddit}/comments/${post.id}`;\n\n  let thumbnail;\n  if (post.thumbnail) {\n    const { url, height, width } = post.thumbnail;\n    thumbnail = (\n      <div className={styles.thumbnail}>\n        <img src={url} width={width} height={height} alt=\"\" />\n      </div>\n    );\n  }\n\n  const subredditSection = isHome ? post.subreddit_name_prefixed : undefined;\n\n  return (\n    <article className={styles.post} onClick={() => onClickPost(post)}>\n      <Link className={styles.link} to={commentsPath}>\n        <div>\n          {subredditSection} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {thumbnail}\n        <div style={{marginTop: 'auto'}}>\n          {score} score | {num_comments} comments\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nexport default Post;\n","import React, { useCallback } from 'react';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport Post from './Post';\nimport Spinner from '../Icons/Spinner';\nimport styles from './Posts.module.scss';\n\nfunction InfiniteScroll({\n  isHome,\n\n  // Array of items loaded so far.\n  postList,\n\n  // Callback function responsible for loading the next page of items.\n  loadNextPage,\n\n  onClickPost,\n}) {\n  // Render a Post\n  const RenderedPost = useCallback((index) => {\n    const post = postList[index]\n    return (\n      <div className={styles.postWrapper}>\n      <Post\n        isHome={isHome}\n        key={post.id}\n        post={post}\n        onClickPost={onClickPost}\n      />\n    </div>\n    );\n  }, [isHome, onClickPost, postList]);\n\n  const LoadingFooter = useCallback(() => {\n    return (\n      <div className={`${styles.loading}`}>\n        <Spinner />\n      </div>\n    )\n  }, []);\n\n  return (\n    <Virtuoso\n      style={{height: \"100vh\", width: \"100%\"}}\n      data={postList}\n      endReached={loadNextPage}\n      itemContent={RenderedPost}\n      components={{\n        Footer: LoadingFooter\n      }}\n    />\n  );\n}\n\nexport default InfiniteScroll;\n","import React, {useState} from 'react';\nimport styles from './TextInput.module.scss';\n\nfunction TextInput({\n    id,\n    locked,\n    focused,\n    value,\n    error,\n    label = '',\n    onChange\n}) {\n    const [active, setActive] = useState((locked && focused) || false);\n    const [inputValue, setInputValue] = useState(value || '');\n    const [inputError, setInputError] = useState(error || '');\n\n    function onChangeEvent(event) {\n        const value = event.target.value;\n        setInputValue(value);\n        setInputError('');\n        return onChange(id, value);\n    }\n\n    const fieldClassName = `${styles.field} ${(locked ? active : active || value) &&\n        styles.active} ${(locked && !active) ? styles.locked : undefined}`;\n\n    return (\n        <div className={fieldClassName}>\n            <input\n                id={id}\n                type=\"text\"\n                value={inputValue}\n                placeholder={label}\n                onChange={onChangeEvent}\n                onFocus={() => !locked && setActive(true)}\n                onBlur={() => !locked && setActive(false)}\n            />\n            <label htmlFor={id} className={error && 'error'}>\n                {inputError || label}\n            </label>\n        </div>\n    )\n}\n\nexport default TextInput;\n","import React, {useEffect, useRef} from 'react';\n\nimport styles from './Modal.module.scss';\n\nfunction Modal({children, onClose, size}) {\n    const wrapperRef = useRef(null);\n    const innerRef = useRef(null);\n\n    let modalSize\n    switch (size) {\n        case \"small\":\n            modalSize = styles.smallModalBox;\n            break;\n        case \"normal\":\n            modalSize = styles.normalModalBox;\n            break;\n        default:\n            modalSize = styles.normalModalBox;\n            break;\n    }\n    \n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (wrapperRef.current && wrapperRef.current.contains(event.target)\n                && innerRef.current && !innerRef.current.contains(event.target)) {\n                onClose();\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [wrapperRef, innerRef, onClose]);\n\n    return (\n        <div ref={wrapperRef} className={styles.container}>\n            <div className={styles.modalContainer}>\n                <div ref={innerRef} className={modalSize}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { IoIosClose } from 'react-icons/io';\n\nimport styles from './GoToSubreddit.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\nimport Modal from '../../shared/Modal/Modal';\n\nfunction GoToSubreddit({onClose}) {\n    const [subreddit, setSubreddit] = useState('');\n    const history = useHistory();\n\n    function onChangeSubreddit(id, value) {\n        setSubreddit(value);\n    }\n\n    function onClick(event) {\n        event.preventDefault();\n        onClose();\n        history.push('/r/' + subreddit);\n    }\n\n    return (\n        <Modal onClose={onClose} size=\"small\">\n            <form className={styles.layout}>\n                <span className={styles.closeButton}>\n                    <IoIosClose alt=\"Close\" onClick={onClose} size=\"40px\" />\n                </span>\n                <div className={styles.subredditInput}>\n                    <TextInput label=\"Subreddit\" onChange={onChangeSubreddit}/>\n                </div>\n                <div className={styles.goButton}>\n                    <Button type=\"submit\" label=\"Go\" onClickEvent={onClick}/>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default GoToSubreddit;\n","\nexport function fetchSubreddits() {\n  const localStorageSubreddits = Object.keys(localStorage).map(key => {\n    return {\n      path: localStorage.getItem(key),\n      text: key,\n    };\n  })\n  const sortedSubreddits = localStorageSubreddits.sort((a, b) => {\n    const lowercasedA = a.text.toLowerCase();\n    const lowercasedB = b.text.toLowerCase();\n\n    if (lowercasedA < lowercasedB) {\n      return -1;\n    }\n\n    if (lowercasedA > lowercasedB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  const subreddits = [{\n    path: '/home',\n    text: 'Home',\n  }, ...sortedSubreddits];\n\n  return subreddits;\n}\n\nexport function addSubreddit(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    localStorage.setItem(subreddit, '/r/' + subreddit);\n  }\n}\n\nexport function removeSubreddit(subreddit) {\n  localStorage.removeItem(subreddit);\n}\n\nexport function isSubscribed(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    return false;\n  }\n\n  return true;\n}\n","import React, { useState } from 'react';\nimport { IoIosClose } from 'react-icons/io';\n\nimport { addSubreddit } from '../../Reddit/subreddits';\nimport styles from './AddSubreddit.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\nimport Modal from '../../shared/Modal/Modal';\n\nfunction AddSubreddit({onClose, fetchSubreddits}) {\n    const [subreddit, setSubreddit] = useState('');\n\n    function onChangeSubreddit(id, value) {\n        setSubreddit(value);\n    }\n\n    function onClick(event) {\n        event.preventDefault();\n        addSubreddit(subreddit);\n        fetchSubreddits();\n        onClose();\n    }\n\n    return (\n        <Modal onClose={onClose} size=\"small\">\n            <form className={styles.layout}>\n                <span className={styles.closeButton}>\n                    <IoIosClose alt=\"Close\" onClick={onClose} size=\"40px\" />\n                </span>\n                <div className={styles.subredditInput}>\n                    <TextInput label=\"Subreddit\" onChange={onChangeSubreddit}/>\n                </div>\n                <div className={styles.addButton}>\n                    <Button type=\"submit\" label=\"Add\" onClickEvent={onClick}/>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AddSubreddit;\n","import axios from 'axios';\n\nimport { Post } from './post';\nimport { fetchSubreddits } from './subreddits';\n\nexport async function fetchPosts(subreddit, currentAfter) {\n  if (!subreddit) {\n    const subreddits = fetchSubreddits().filter(subreddit => subreddit.text !== 'Home');\n\n    if (!subreddits.length) {\n      subreddit = 'all';  \n    } else {\n      subreddit = `${subreddits.map(subreddit => subreddit.text + '+')}`;\n      subreddit = subreddit.replaceAll(',', \"\").substring(0, subreddit.length - 1);\n    }\n  }\n\n  const requestUrl = `https://www.reddit.com/r/${subreddit}.json?after=${currentAfter}&limit=15`\n  let result;\n  try {\n    result = await axios.get(requestUrl);\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error(`Unable to fetch posts for ${subreddit}`);\n    }\n  } catch (err) {\n    throw new Error(`Unable to fetch posts for ${subreddit}`);\n  }\n\n  if (result && result.data && result.data.data) {\n    const { children, after } = result.data.data;\n    const posts = extractPosts(children);\n    return {\n      posts,\n      nextAfter: after,\n    };\n  }\n}\n\nfunction extractPosts(children) {\n  return children.map((child) => new Post(child.data));\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Route, useHistory } from 'react-router';\nimport {IoHeartSharp, IoHeartOutline} from 'react-icons/io5'\n\nimport styles from './Posts.module.scss';\nimport Navbar from '../Navbar/Navbar';\nimport CommentsOverview from '../Comments/CommentsOverview';\nimport InfiniteScroll from './InfiniteScroll';\nimport GoToSubreddit from '../GoToSubreddit/GoToSubreddit';\nimport Hamburger from '../Icons/Hamburger';\nimport AddSubreddit from '../AddSubreddit/AddSubreddit';\n\nimport { fetchPosts } from '../../Reddit/posts';\nimport { addSubreddit, removeSubreddit, isSubscribed } from '../../Reddit/subreddits';\n\nfunction PostsView({ match, isHome, subreddits, fetchSubreddits }) {\n  const { subreddit } = match.params;\n  const [postList, setPostList] = useState([]);\n  const [after, setAfter] = useState('');\n  const [selectedPost, setSelectedPost] = useState(undefined);\n  const history = useHistory();\n\n  const [showNavBar, setShowNavBar] = useState(true);\n  const [showGoToSubreddit, setShowGoToSubreddit] = useState(false);\n  const [showAddSubreddit, setShowAddSubreddit] = useState(false);\n\n  function _loadNextPage(...args) {\n    function loadMore(subreddit, after) {\n      try {\n        setTimeout(async () => {\n          const { posts, nextAfter } = await fetchPosts(subreddit, after);\n          setPostList((prevPostList) => [...prevPostList, ...posts]);\n          setAfter(nextAfter);\n        }, 1000);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    loadMore(subreddit, after);\n  }\n\n  const commentsPath = isHome\n    ? '/home/r/:subreddit/comments/:postId'\n    : '/r/:subreddit/comments/:postId';\n\n  useEffect(() => {\n    async function fetch(subreddit, after) {\n      try {\n        const { posts, nextAfter } = await fetchPosts(subreddit, after);\n        setPostList(posts);\n        setAfter(nextAfter);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, '');\n\n    return () => {\n      setSelectedPost(undefined);\n      setPostList([]);\n      setAfter('');\n      console.log('subreddit changed in postsview');\n    };\n  }, [subreddit]);\n\n  function onClickPost(post) {\n    console.log(post);\n    setSelectedPost(post);\n  }\n\n  const onCloseNav = useCallback(() => {\n    setShowNavBar(!showNavBar);\n  }, [showNavBar]);\n\n  function onShowGoToSubreddit() {\n    setShowAddSubreddit(false);\n    setShowGoToSubreddit(!showGoToSubreddit);\n  }\n\n  function onShowAddSubreddit() {\n    setShowGoToSubreddit(false);\n    setShowAddSubreddit(!showAddSubreddit);\n  }\n\n  function subscribeToSubreddit() {\n    addSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  function unsubscribeToSubreddit() {\n    console.log('test');\n    removeSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  const onCloseComments = useCallback((event) => {\n    if (event.keyCode === 27 || event.type === 'click') {\n      setSelectedPost(undefined);\n      if (isHome) {\n        history.push('/home');\n      } else {\n        history.push(`/r/${subreddit}`);\n      }\n    }\n  }, [history, isHome, subreddit]);\n\n  const renderCommentsOverview = useCallback((props) => {\n    return (<CommentsOverview\n      {...props}\n      onCloseNav={onCloseNav}\n      showNavBar={showNavBar}\n      selectedPost={selectedPost}\n      onCloseComments={onCloseComments}\n    />);\n  }, [onCloseNav, onCloseComments, showNavBar, selectedPost]);\n\n  const subredditText = isHome ? <div>Home</div> : <div>r/{subreddit}</div>;\n  return (\n    <div className={styles.container}>\n      {showNavBar && (\n        <Navbar\n          navData={subreddits}\n          selectedSubreddit={subreddit}\n          onCloseNav={onCloseNav}\n          onShowGoToSubreddit={onShowGoToSubreddit}\n          onShowAddSubreddit={onShowAddSubreddit}\n        />\n      )}\n      <div className={styles.posts}>\n        <Route\n          path={commentsPath}\n          render={renderCommentsOverview}\n        />\n        {showGoToSubreddit && (\n          <GoToSubreddit onClose={onShowGoToSubreddit} />\n        )}\n        {showAddSubreddit && (\n          <AddSubreddit onClose={onShowAddSubreddit} fetchSubreddits={fetchSubreddits}/>\n        )}\n        <div className={styles.subredditText}>\n          {!showNavBar && (\n            <span className={styles.hamburger}>\n              <Hamburger onClick={onCloseNav} />\n            </span>\n          )}\n          <h3>\n            <i>{subredditText}</i>\n          </h3>\n          {!isHome && <span className={styles.heart}>\n            {isSubscribed(subreddit) ? (\n              <IoHeartSharp size=\"30px\" color=\"rgb(249, 24, 128)\" onClick={unsubscribeToSubreddit}/>\n            ) : (\n              <IoHeartOutline size=\"30px\" onClick={subscribeToSubreddit}/>\n            )}\n          </span>}\n        </div>\n        <InfiniteScroll\n          isHome={isHome}\n          postList={postList}\n          loadNextPage={_loadNextPage}\n          onClickPost={onClickPost}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PostsView;\n","import React, { useCallback } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport PostsView from '../Posts/PostsView';\n\nfunction DashboardRouter({ subreddits, fetchSubreddits }) {\n  const renderHome = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={true} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    );\n  }, [subreddits, fetchSubreddits]);\n\n  const renderSubreddit = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={false} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    )\n  }, [subreddits, fetchSubreddits]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n      <Route\n        path={'/home'}\n        render={renderHome}\n      />\n      <Route\n        path={'/r/:subreddit'}\n        render={renderSubreddit}\n      />\n    </Switch>\n  );\n}\n\nexport default DashboardRouter;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport DashboardRouter from './DashboardRouter';\nimport styles from './Dashboard.module.scss';\n\nimport { fetchSubreddits } from '../../Reddit/subreddits';\n\nfunction Dashboard() {\n  const [subreddits, setSubreddits] = useState([]);\n  \n  const fetch = useCallback(() => {\n    const subreddits = fetchSubreddits();\n    setSubreddits(subreddits);\n  }, []);\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  return (\n    <main className={styles.container}>\n      <div className={styles.content}>\n        <DashboardRouter subreddits={subreddits} fetchSubreddits={fetch}/>\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './Dashboard/Dashboard';\n\nfunction ThredditRouter() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route path=\"*\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default ThredditRouter;\n","import React from 'react';\nimport ThredditRouter from './components/ThredditRouter';\n\nfunction App() {\n  return <ThredditRouter />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n(async function() {\n  console.log('polyfill');\n  smoothscroll.polyfill();\n\n  if (!(\"scrollBehavior\" in document.documentElement.style)) {\n    await import('smoothscroll-anchor-polyfill');\n  }\n})();\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}