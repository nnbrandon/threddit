{"version":3,"sources":["components/Posts/Posts.module.scss","components/Navbar/Navbar.module.scss","shared/Modal/Modal.module.scss","components/GoToSubreddit/GoToSubreddit.module.scss","components/AddSubreddit/AddSubreddit.module.scss","shared/TextInput/TextInput.module.scss","components/Dashboard/Dashboard.module.scss","shared/Button/Button.module.scss","components/Icons/Spinner.module.scss","components/Comments/Comments.module.scss","shared/Button/Button.js","components/Navbar/Navbar.js","components/Comments/PostSection.js","components/Icons/Spinner.js","components/Icons/Hamburger.js","components/Comments/Comment.js","Reddit/comment.js","Reddit/post.js","Reddit/comments.js","components/Comments/CommentsOverview.js","components/Posts/Post.js","components/Posts/InfiniteScroll.js","shared/TextInput/TextInput.js","shared/Modal/Modal.js","components/GoToSubreddit/GoToSubreddit.js","Reddit/subreddits.js","components/AddSubreddit/AddSubreddit.js","Reddit/posts.js","components/Posts/PostsView.js","components/Dashboard/DashboardRouter.js","components/Dashboard/Dashboard.js","components/ThredditRouter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","type","onClickEvent","label","className","styles","button","onClick","Navbar","navData","selectedSubreddit","onCloseNav","onShowGoToSubreddit","onShowAddSubreddit","subreddit","renderNavData","map","data","index","selectedStyle","path","to","text","sidebar","alt","size","nav","buttons","buttonLayout","PostSection","renderPostSection","post","title","score","num_comments","prefixedAuthor","getPrefixedAuthor","date","timeSince","previewSource","getPreviewSource","text_html","he","decode","undefined","url","href","target","rel","preview","previewImg","src","subreddit_name_prefixed","postSection","postSectionPreview","textHtml","dangerouslySetInnerHTML","__html","Fragment","Spinner","icon","spinner","Hamburger","Comment","comment","body_html","id","depth","this","author","created_utc","body","commentId","name","parent_id","datePosted","Date","seconds","Math","floor","interval","Post","postId","is_video","subreddit_id","selftext","selftext_html","thumbnail","thumbnail_height","thumbnail_width","height","width","images","length","source","replace","toLowerCase","fetchComments","fetchPost","a","axios","get","result","console","log","status","Error","children","commentsObject","comments","flattenComments","childrenArr","reduce","accum","current","replies","flattenedReplies","push","getCommentsUrlJSON","CommentsOverview","selectedPost","onCloseComments","match","showNavBar","params","useState","setComments","setPost","useEffect","document","addEventListener","removeEventListener","commentsUrlJSON","error","fetch","backArrow","RenderedPostHeader","useCallback","postSectionWrapper","RenderedComment","commentWrapper","LoadingFooter","loading","container","postSectionHeader","hamburger","commentsContainer","commentsSection","style","itemContent","components","Header","Footer","isHome","onClickPost","commentsPath","subredditSection","link","marginTop","InfiniteScroll","postList","loadNextPage","RenderedPost","postWrapper","endReached","TextInput","locked","focused","value","onChange","active","setActive","inputValue","setInputValue","inputError","setInputError","fieldClassName","field","placeholder","event","onFocus","onBlur","htmlFor","Modal","modalSize","onClose","wrapperRef","useRef","innerRef","smallModalBox","normalModalBox","handleClickOutside","contains","ref","modalContainer","GoToSubreddit","setSubreddit","history","useHistory","layout","closeButton","subredditInput","goButton","preventDefault","addSubreddit","localStorage","getItem","setItem","isSubscribed","AddSubreddit","fetchSubreddits","addButton","fetchPosts","currentAfter","after","posts","extractPosts","nextAfter","child","PostsView","subreddits","setPostList","setAfter","setSelectedPost","setShowNavBar","showGoToSubreddit","setShowGoToSubreddit","showAddSubreddit","setShowAddSubreddit","keyCode","renderCommentsOverview","props","subredditText","render","heart","color","removeItem","removeSubreddit","setTimeout","prevPostList","err","loadMore","DashboardRouter","renderHome","renderSubreddit","exact","Dashboard","setSubreddits","sortedSubreddits","Object","keys","key","sort","b","lowercasedA","lowercasedB","content","ThredditRouter","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ab2d9f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__3vF_i\",\"posts\":\"Posts_posts__fNhWU\",\"subredditText\":\"Posts_subredditText__cTroL\",\"hamburger\":\"Posts_hamburger__d_e42\",\"link\":\"Posts_link__JEwjG\",\"postWrapper\":\"Posts_postWrapper__5hsp2\",\"loading\":\"Posts_loading__3ZzJ9\",\"post\":\"Posts_post__LyNp_\",\"thumbnail\":\"Posts_thumbnail__OSOEU\",\"selectedPost\":\"Posts_selectedPost__2kv0K\",\"heart\":\"Posts_heart__2tyg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__mwQyv\",\"buttons\":\"Navbar_buttons__3W0vS\",\"buttonLayout\":\"Navbar_buttonLayout__2VQ-d\",\"selectedSubreddit\":\"Navbar_selectedSubreddit__zvZa5\",\"nav\":\"Navbar_nav__3cHYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__Nc-xq\",\"modalContainer\":\"Modal_modalContainer__1CKZv\",\"smallModalBox\":\"Modal_smallModalBox__2FFp1\",\"normalModalBox\":\"Modal_normalModalBox__3o1l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"GoToSubreddit_layout__21D0p\",\"subredditInput\":\"GoToSubreddit_subredditInput__m12PC\",\"goButton\":\"GoToSubreddit_goButton__6dCc-\",\"closeButton\":\"GoToSubreddit_closeButton__3W8HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"AddSubreddit_layout__2jH53\",\"subredditInput\":\"AddSubreddit_subredditInput__2Ks9l\",\"addButton\":\"AddSubreddit_addButton__3gyg4\",\"closeButton\":\"AddSubreddit_closeButton__3_fe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"TextInput_field__3Nkmt\",\"active\":\"TextInput_active__3dxBt\",\"locked\":\"TextInput_locked___Exol\",\"error\":\"TextInput_error__2rUuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__205D7\",\"content\":\"Dashboard_content__1OVLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__CftuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__-Zzob\",\"spin\":\"Spinner_spin__rZPQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comments_container__2gEP4\",\"commentWrapper\":\"Comments_commentWrapper__KaDj2\",\"commentsContainer\":\"Comments_commentsContainer__3yUU3\",\"hamburger\":\"Comments_hamburger__1FiW_\",\"backArrow\":\"Comments_backArrow__3geJG\",\"loading\":\"Comments_loading__2kYMG\",\"comment\":\"Comments_comment__3yO4C\",\"postSectionWrapper\":\"Comments_postSectionWrapper__2eTTK\",\"postSection\":\"Comments_postSection__1iARa\",\"postSectionHeader\":\"Comments_postSectionHeader__1YSqL\",\"postSectionPreview\":\"Comments_postSectionPreview__39AzW\",\"closeButton\":\"Comments_closeButton__3YHDJ\",\"previewImg\":\"Comments_previewImg__Xck6t\",\"textHtml\":\"Comments_textHtml__3XLtl\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nfunction Button({type, onClickEvent, label}) {\n    return (\n        <button type=\"submit\" className={styles.button} onClick={onClickEvent}>{label}</button>\n    )\n}\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosClose } from 'react-icons/io';\n\nimport styles from './Navbar.module.scss';\nimport Button from '../../shared/Button/Button';\n\nfunction Navbar({ navData, selectedSubreddit, onCloseNav, onShowGoToSubreddit, onShowAddSubreddit }) {\n  const subreddit = selectedSubreddit ? '/r/' + selectedSubreddit : '';\n  const renderNavData = navData.map((data, index) => {\n    let selectedStyle;\n    if (\n      subreddit === data.path ||\n      (subreddit === '' && data.path === '/home')\n    ) {\n      selectedStyle = styles.selectedSubreddit;\n    }\n    return (\n      <li key={index}>\n        <Link className={selectedStyle} to={data.path}>\n          {data.text}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <div className={styles.sidebar}>\n      <span>\n        <IoIosClose alt=\"Close\" onClick={onCloseNav} size=\"50px\" />\n      </span>\n      <nav className={styles.nav}>\n        <ul>{renderNavData}</ul>\n      </nav>\n      <div className={styles.buttons}>\n        <span className={styles.buttonLayout}>\n          <Button onClickEvent={onShowGoToSubreddit} label=\"Go to Subreddit\"/>\n        </span>\n        <span className={styles.buttonLayout}>\n          <Button onClickEvent={onShowAddSubreddit} label=\"Add Subreddit\"/>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport he from 'he';\n\nimport styles from './Comments.module.scss';\n\nfunction PostSection({ post }) {\n  let renderPostSection;\n  if (post) {\n    const { title, score, num_comments } = post;\n    const prefixedAuthor = post.getPrefixedAuthor();\n    const date = post.timeSince();\n    const previewSource = post.getPreviewSource();\n\n    const text = post.text_html ? he.decode(post.text_html) : undefined;\n    const url = post.url ? (\n      <a href={post.url} target=\"_blank\" rel=\"noreferrer\">\n        {post.url}\n      </a>\n    ) : undefined;\n    const preview = previewSource ? (\n      <img\n        className={styles.previewImg}\n        src={previewSource.url}\n        alt={`${post.subreddit_name_prefixed} - ${post.title}`}\n      />\n    ) : undefined;\n\n    renderPostSection = (\n      <div className={styles.postSection}>\n        <div>\n          r/{post.subreddit} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {url}\n        <br />\n        <div className={styles.postSectionPreview}>{preview}</div>\n        <div\n          className={styles.textHtml}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n\n        <br />\n        <div>\n          {score} score | {num_comments} comments\n        </div>\n      </div>\n    );\n  }\n\n  return <React.Fragment>{renderPostSection}</React.Fragment>;\n}\n\nexport default PostSection;\n","import React from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport styles from './Spinner.module.scss';\n\nfunction Spinner({ size }) {\n  return (\n    <FaSpinner\n      alt=\"Loading...\"\n      icon=\"spinner\"\n      className={styles.spinner}\n      size={'40px' || size}\n    />\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { GiHamburgerMenu } from 'react-icons/gi';\n\nfunction Hamburger({ onClick, size }) {\n  const iconSize = '30px' || size;\n  return <GiHamburgerMenu onClick={onClick} size={iconSize} />;\n}\n\nexport default Hamburger;\n","import React from 'react';\nimport he from 'he';\nimport styles from './Comments.module.scss';\n\nfunction Comment({ comment }) {\n  const { score, body_html, id, depth } = comment;\n  const prefixedAuthor = comment.getPrefixedAuthor();\n  const date = comment.timeSince();\n\n  let text;\n  if (body_html) {\n    text = he.decode(body_html);\n  }\n\n  return (\n    <div className={styles.comment} key={id}>\n      <div>\n        Posted by {prefixedAuthor} {date}\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: text }} />\n      <br />\n      <div>\n        {score} score | Comment depth: {depth}\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","export class Comment {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.body = data.body;\n    this.body_html = data.body_html;\n    this.depth = data.depth;\n    this.id = data.id;\n    this.commentId = data.name;\n    this.parent_id = data.parent_id;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","export class Post {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.id = data.id;\n    this.postId = data.name;\n    this.is_video = data.is_video;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_id = data.subreddit_id;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n    this.title = data.title;\n    this.url = data.url;\n    this.num_comments = data.num_comments;\n    this.text = data.selftext;\n    this.text_html = data.selftext_html;\n    this.preview = data.preview;\n    this.is_video = data.is_video;\n\n    this.thumbnail =\n      data.url && data.thumbnail_height && data.thumbnail_width\n        ? {\n            url: data.thumbnail,\n            height: data.thumbnail_height,\n            width: data.thumbnail_width,\n          }\n        : undefined;\n  }\n\n  getPreviewSource() {\n    if (\n      this.preview &&\n      this.preview.images &&\n      this.preview.images.length > 0 &&\n      !this.is_video\n    ) {\n      const { source } = this.preview.images[0];\n      if (!source) {\n        return undefined;\n      }\n      return {\n        height: source.height,\n        width: source.width,\n        url: source.url.replace('amp;', ''),\n      };\n    }\n    return undefined;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  getLowerCasedSubreddit() {\n    return this.subreddit.toLowerCase();\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","import axios from 'axios';\nimport { Comment } from './comment';\nimport { Post } from './post';\n\nexport async function fetchComments(url, fetchPost) {\n  let result;\n  try {\n    result = await axios.get(`${url}?limit=50`);\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error('Unable to fetch comments');\n    }\n  } catch (err) {\n    throw new Error('Unable to fetch comments');\n  }\n\n  if (result && result.data) {\n    let post;\n    if (fetchPost) {\n      post = new Post(result.data[0].data.children[0].data); // TODO: Fix hack\n    }\n\n    const commentsObject = result.data[1];\n    if (!commentsObject) {\n      throw new Error('Unable to fetch comments');\n    }\n    const { data } = commentsObject;\n    if (!data) {\n      throw new Error('Unable to fetch comments');\n    }\n\n    const { children } = data;\n    const comments = flattenComments(children);\n    return {\n      post,\n      comments,\n    };\n  }\n}\n\nfunction flattenComments(childrenArr) {\n  return childrenArr.reduce((accum, current) => {\n    const { data } = current;\n    const comment = new Comment(data);\n    if (data.replies) {\n      const { children } = data.replies.data;\n      const flattenedReplies = flattenComments(children);\n      accum.push(comment);\n      accum = [...accum, ...flattenedReplies];\n    } else {\n      accum.push(comment);\n    }\n    return accum;\n  }, []);\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { IoIosArrowBack, IoIosClose } from 'react-icons/io';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport styles from './Comments.module.scss';\nimport PostSection from './PostSection';\nimport Spinner from '../Icons/Spinner';\nimport Hamburger from '../Icons/Hamburger';\nimport Comment from './Comment';\n\nimport { fetchComments } from '../../Reddit/comments';\n\nfunction getCommentsUrlJSON(subreddit, postId) {\n  return `https://www.reddit.com/r/${subreddit}/comments/${postId}.json`;\n}\n\nfunction CommentsOverview({\n  selectedPost,\n  onCloseComments,\n  match,\n  onCloseNav,\n  showNavBar,\n}) {\n  const { postId, subreddit } = match.params;\n  const [comments, setComments] = useState([]);\n  const [post, setPost] = useState(selectedPost);\n\n  useEffect(() => {\n    document.addEventListener('keydown', onCloseComments);\n    return () => {\n      document.removeEventListener('keydown', onCloseComments);\n      setComments([]);\n      setPost(undefined);\n    };\n  }, [onCloseComments]);\n\n  useEffect(() => {\n    async function fetch() {\n      const commentsUrlJSON = getCommentsUrlJSON(subreddit, postId);\n      try {\n        const { post, comments } = await fetchComments(\n          commentsUrlJSON,\n          !selectedPost,\n        );\n      \n        if (!selectedPost) {\n          setPost(post);\n        }\n\n        setComments(comments);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, postId);\n\n    return () => {\n      setComments([]);\n      setPost(undefined);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const backArrow = showNavBar ? (\n    <IoIosArrowBack\n      className={styles.backArrow}\n      alt=\"Back\"\n      onClick={onCloseComments}\n      size=\"30px\"\n    />\n  ) : (\n    <span />\n  );\n  const RenderedPostHeader = useCallback(() => {\n    return (\n      <div className={styles.postSectionWrapper}>\n        <PostSection post={post} onCloseComments={onCloseComments} />\n      </div>\n    );\n  }, [post, onCloseComments]);\n\n  // Render a Comment\n  const RenderedComment = useCallback((index) => {\n    const comment = comments[index]\n    return (\n      <div className={styles.commentWrapper}>\n        <Comment\n          key={comment.id}\n          comment={comment}\n        />\n      </div>\n    );\n  }, [comments]);\n\n  const LoadingFooter = useCallback(() => {\n    const spinner = (\n      <div className={styles.loading}>\n        <Spinner />\n      </div>\n    )\n    return spinner;\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postSectionHeader}>\n        <span className={styles.hamburger}>\n          {!showNavBar && <Hamburger onClick={onCloseNav} />}\n          {backArrow}\n        </span>\n        <div>\n          <IoIosClose alt=\"Close\" onClick={onCloseComments} size=\"40px\" />\n        </div>\n      </div>\n      <div className={styles.commentsContainer}>\n        <div className={styles.commentsSection}>\n          <Virtuoso \n            style={{height: \"100vh\", width: \"100%\"}}\n            data={comments}\n            itemContent={RenderedComment}\n            components={{\n              Header: RenderedPostHeader,\n              Footer: LoadingFooter\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentsOverview;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Posts.module.scss';\n\nfunction Post({ isHome, post, onClickPost }) {\n  const { title, score, num_comments } = post;\n  const prefixedAuthor = post.getPrefixedAuthor();\n  const date = post.timeSince();\n  const commentsPath = isHome\n    ? `/home/r/${post.subreddit}/comments/${post.id}`\n    : `/r/${post.subreddit}/comments/${post.id}`;\n\n  let thumbnail;\n  if (post.thumbnail) {\n    const { url, height, width } = post.thumbnail;\n    thumbnail = (\n      <div className={styles.thumbnail}>\n        <img src={url} width={width} height={height} alt=\"\" />\n      </div>\n    );\n  }\n\n  const subredditSection = isHome ? post.subreddit_name_prefixed : undefined;\n\n  return (\n    <article className={styles.post} onClick={() => onClickPost(post)}>\n      <Link className={styles.link} to={commentsPath}>\n        <div>\n          {subredditSection} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {thumbnail}\n        <div style={{marginTop: 'auto'}}>\n          {score} score | {num_comments} comments\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nexport default Post;\n","import React, { useCallback } from 'react';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport Post from './Post';\nimport Spinner from '../Icons/Spinner';\nimport styles from './Posts.module.scss';\n\nfunction InfiniteScroll({\n  isHome,\n\n  // Array of items loaded so far.\n  postList,\n\n  // Callback function responsible for loading the next page of items.\n  loadNextPage,\n\n  onClickPost,\n}) {\n  // Render a Post\n  const RenderedPost = useCallback((index) => {\n    const post = postList[index]\n    return (\n      <div className={styles.postWrapper}>\n      <Post\n        isHome={isHome}\n        key={post.id}\n        post={post}\n        onClickPost={onClickPost}\n      />\n    </div>\n    );\n  }, [isHome, onClickPost, postList]);\n\n  const LoadingFooter = useCallback(() => {\n    return (\n      <div className={`${styles.loading}`}>\n        <Spinner />\n      </div>\n    )\n  }, []);\n\n  return (\n    <Virtuoso\n      style={{height: \"100vh\", width: \"100%\"}}\n      data={postList}\n      endReached={loadNextPage}\n      itemContent={RenderedPost}\n      components={{\n        Footer: LoadingFooter\n      }}\n    />\n  );\n}\n\nexport default InfiniteScroll;\n","import React, {useState} from 'react';\nimport styles from './TextInput.module.scss';\n\nfunction TextInput({\n    id,\n    locked,\n    focused,\n    value,\n    error,\n    label = '',\n    onChange\n}) {\n    const [active, setActive] = useState((locked && focused) || false);\n    const [inputValue, setInputValue] = useState(value || '');\n    const [inputError, setInputError] = useState(error || '');\n\n    function onChangeEvent(event) {\n        const value = event.target.value;\n        setInputValue(value);\n        setInputError('');\n        return onChange(id, value);\n    }\n\n    const fieldClassName = `${styles.field} ${(locked ? active : active || value) &&\n        styles.active} ${(locked && !active) ? styles.locked : undefined}`;\n\n    return (\n        <div className={fieldClassName}>\n            <input\n                id={id}\n                type=\"text\"\n                value={inputValue}\n                placeholder={label}\n                onChange={onChangeEvent}\n                onFocus={() => !locked && setActive(true)}\n                onBlur={() => !locked && setActive(false)}\n            />\n            <label htmlFor={id} className={error && 'error'}>\n                {inputError || label}\n            </label>\n        </div>\n    )\n}\n\nexport default TextInput;\n","import React, {useEffect, useRef} from 'react';\n\nimport styles from './Modal.module.scss';\n\nfunction Modal({children, onClose, size}) {\n    const wrapperRef = useRef(null);\n    const innerRef = useRef(null);\n\n    let modalSize\n    switch (size) {\n        case \"small\":\n            modalSize = styles.smallModalBox;\n            break;\n        case \"normal\":\n            modalSize = styles.normalModalBox;\n            break;\n        default:\n            modalSize = styles.normalModalBox;\n            break;\n    }\n    \n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (wrapperRef.current && wrapperRef.current.contains(event.target)\n                && innerRef.current && !innerRef.current.contains(event.target)) {\n                onClose();\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [wrapperRef, innerRef, onClose]);\n\n    return (\n        <div ref={wrapperRef} className={styles.container}>\n            <div className={styles.modalContainer}>\n                <div ref={innerRef} className={modalSize}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { IoIosClose } from 'react-icons/io';\n\nimport styles from './GoToSubreddit.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\nimport Modal from '../../shared/Modal/Modal';\n\nfunction GoToSubreddit({onClose}) {\n    const [subreddit, setSubreddit] = useState('');\n    const history = useHistory();\n\n    function onChangeSubreddit(id, value) {\n        setSubreddit(value);\n    }\n\n    function onClick(event) {\n        event.preventDefault();\n        onClose();\n        history.push('/r/' + subreddit);\n    }\n\n    return (\n        <Modal onClose={onClose} size=\"small\">\n            <form className={styles.layout}>\n                <span className={styles.closeButton}>\n                    <IoIosClose alt=\"Close\" onClick={onClose} size=\"40px\" />\n                </span>\n                <div className={styles.subredditInput}>\n                    <TextInput label=\"Subreddit\" onChange={onChangeSubreddit}/>\n                </div>\n                <div className={styles.goButton}>\n                    <Button type=\"submit\" label=\"Go\" onClickEvent={onClick}/>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default GoToSubreddit;\n","\nexport function fetchSubreddits() {\n  const localStorageSubreddits = Object.keys(localStorage).map(key => {\n    return {\n      path: localStorage.getItem(key),\n      text: key,\n    };\n  })\n  const sortedSubreddits = localStorageSubreddits.sort((a, b) => {\n    const lowercasedA = a.text.toLowerCase();\n    const lowercasedB = b.text.toLowerCase();\n\n    if (lowercasedA < lowercasedB) {\n      return -1;\n    }\n\n    if (lowercasedA > lowercasedB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  const subreddits = [{\n    path: '/home',\n    text: 'Home',\n  }, ...sortedSubreddits];\n\n  return subreddits;\n}\n\nexport function addSubreddit(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    localStorage.setItem(subreddit, '/r/' + subreddit);\n  }\n}\n\nexport function removeSubreddit(subreddit) {\n  localStorage.removeItem(subreddit);\n}\n\nexport function isSubscribed(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    return false;\n  }\n\n  return true;\n}\n","import React, { useState } from 'react';\nimport { IoIosClose } from 'react-icons/io';\n\nimport { addSubreddit } from '../../Reddit/subreddits';\nimport styles from './AddSubreddit.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\nimport Modal from '../../shared/Modal/Modal';\n\nfunction AddSubreddit({onClose, fetchSubreddits}) {\n    const [subreddit, setSubreddit] = useState('');\n\n    function onChangeSubreddit(id, value) {\n        setSubreddit(value);\n    }\n\n    function onClick(event) {\n        event.preventDefault();\n        addSubreddit(subreddit);\n        fetchSubreddits();\n        onClose();\n    }\n\n    return (\n        <Modal onClose={onClose} size=\"small\">\n            <form className={styles.layout}>\n                <span className={styles.closeButton}>\n                    <IoIosClose alt=\"Close\" onClick={onClose} size=\"40px\" />\n                </span>\n                <div className={styles.subredditInput}>\n                    <TextInput label=\"Subreddit\" onChange={onChangeSubreddit}/>\n                </div>\n                <div className={styles.addButton}>\n                    <Button type=\"submit\" label=\"Add\" onClickEvent={onClick}/>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AddSubreddit;\n","import axios from 'axios';\n\nimport { Post } from './post';\n\nexport async function fetchPosts(subreddit, currentAfter) {\n  if (!subreddit) {\n    subreddit = 'all';\n  }\n  let result;\n  try {\n    result = await axios.get(\n      `https://www.reddit.com/r/${subreddit}.json?after=${currentAfter}&limit=15`,\n    );\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error(`Unable to fetch posts for ${subreddit}`);\n    }\n  } catch (err) {\n    throw new Error(`Unable to fetch posts for ${subreddit}`);\n  }\n\n  if (result && result.data && result.data.data) {\n    const { children, after } = result.data.data;\n    const posts = extractPosts(children);\n    return {\n      posts,\n      nextAfter: after,\n    };\n  }\n}\n\nfunction extractPosts(children) {\n  return children.map((child) => new Post(child.data));\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Route, useHistory } from 'react-router';\nimport {IoHeartSharp, IoHeartOutline} from 'react-icons/io5'\n\nimport styles from './Posts.module.scss';\nimport Navbar from '../Navbar/Navbar';\nimport CommentsOverview from '../Comments/CommentsOverview';\nimport InfiniteScroll from './InfiniteScroll';\nimport GoToSubreddit from '../GoToSubreddit/GoToSubreddit';\nimport Hamburger from '../Icons/Hamburger';\nimport AddSubreddit from '../AddSubreddit/AddSubreddit';\n\nimport { fetchPosts } from '../../Reddit/posts';\nimport { addSubreddit, removeSubreddit, isSubscribed } from '../../Reddit/subreddits';\n\nfunction PostsView({ match, isHome, subreddits, fetchSubreddits }) {\n  const { subreddit } = match.params;\n  const [postList, setPostList] = useState([]);\n  const [after, setAfter] = useState('');\n  const [selectedPost, setSelectedPost] = useState(undefined);\n  const history = useHistory();\n\n  const [showNavBar, setShowNavBar] = useState(true);\n  const [showGoToSubreddit, setShowGoToSubreddit] = useState(false);\n  const [showAddSubreddit, setShowAddSubreddit] = useState(false);\n\n  function _loadNextPage(...args) {\n    function loadMore(subreddit, after) {\n      try {\n        setTimeout(async () => {\n          const { posts, nextAfter } = await fetchPosts(subreddit, after);\n          setPostList((prevPostList) => [...prevPostList, ...posts]);\n          setAfter(nextAfter);\n        }, 1000);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    loadMore(subreddit, after);\n  }\n\n  const commentsPath = isHome\n    ? '/home/r/:subreddit/comments/:postId'\n    : '/r/:subreddit/comments/:postId';\n\n  useEffect(() => {\n    async function fetch(subreddit, after) {\n      try {\n        const { posts, nextAfter } = await fetchPosts(subreddit, after);\n        setPostList(posts);\n        setAfter(nextAfter);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, '');\n\n    return () => {\n      setSelectedPost(undefined);\n      setPostList([]);\n      setAfter('');\n      console.log('subreddit changed in postsview');\n    };\n  }, [subreddit]);\n\n  function onClickPost(post) {\n    console.log(post);\n    setSelectedPost(post);\n  }\n\n  const onCloseNav = useCallback(() => {\n    setShowNavBar(!showNavBar);\n  }, [showNavBar]);\n\n  function onShowGoToSubreddit() {\n    setShowAddSubreddit(false);\n    setShowGoToSubreddit(!showGoToSubreddit);\n  }\n\n  function onShowAddSubreddit() {\n    setShowGoToSubreddit(false);\n    setShowAddSubreddit(!showAddSubreddit);\n  }\n\n  function subscribeToSubreddit() {\n    addSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  function unsubscribeToSubreddit() {\n    console.log('test');\n    removeSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  const onCloseComments = useCallback((event) => {\n    if (event.keyCode === 27 || event.type === 'click') {\n      setSelectedPost(undefined);\n      if (isHome) {\n        history.push('/home');\n      } else {\n        history.push(`/r/${subreddit}`);\n      }\n    }\n  }, [history, isHome, subreddit]);\n\n  const renderCommentsOverview = useCallback((props) => {\n    return (<CommentsOverview\n      {...props}\n      onCloseNav={onCloseNav}\n      showNavBar={showNavBar}\n      selectedPost={selectedPost}\n      onCloseComments={onCloseComments}\n    />);\n  }, [onCloseNav, onCloseComments, showNavBar, selectedPost]);\n\n  const subredditText = isHome ? <div>Home</div> : <div>r/{subreddit}</div>;\n  return (\n    <div className={styles.container}>\n      {showNavBar && (\n        <Navbar\n          navData={subreddits}\n          selectedSubreddit={subreddit}\n          onCloseNav={onCloseNav}\n          onShowGoToSubreddit={onShowGoToSubreddit}\n          onShowAddSubreddit={onShowAddSubreddit}\n        />\n      )}\n      <div className={styles.posts}>\n        <Route\n          path={commentsPath}\n          render={renderCommentsOverview}\n        />\n        {showGoToSubreddit && (\n          <GoToSubreddit onClose={onShowGoToSubreddit} />\n        )}\n        {showAddSubreddit && (\n          <AddSubreddit onClose={onShowAddSubreddit} fetchSubreddits={fetchSubreddits}/>\n        )}\n        <div className={styles.subredditText}>\n          {!showNavBar && (\n            <span className={styles.hamburger}>\n              <Hamburger onClick={onCloseNav} />\n            </span>\n          )}\n          <h3>\n            <i>{subredditText}</i>\n          </h3>\n          {!isHome && <span className={styles.heart}>\n            {isSubscribed(subreddit) ? (\n              <IoHeartSharp size=\"30px\" color=\"rgb(249, 24, 128)\" onClick={unsubscribeToSubreddit}/>\n            ) : (\n              <IoHeartOutline size=\"30px\" onClick={subscribeToSubreddit}/>\n            )}\n          </span>}\n        </div>\n        <br />\n        <InfiniteScroll\n          isHome={isHome}\n          postList={postList}\n          loadNextPage={_loadNextPage}\n          onClickPost={onClickPost}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PostsView;\n","import React, { useCallback } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport PostsView from '../Posts/PostsView';\n\nfunction DashboardRouter({ subreddits, fetchSubreddits }) {\n  const renderHome = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={true} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    );\n  }, [subreddits, fetchSubreddits]);\n\n  const renderSubreddit = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={false} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    )\n  }, [subreddits, fetchSubreddits]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n      <Route\n        path={'/home'}\n        render={renderHome}\n      />\n      <Route\n        path={'/r/:subreddit'}\n        render={renderSubreddit}\n      />\n    </Switch>\n  );\n}\n\nexport default DashboardRouter;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport DashboardRouter from './DashboardRouter';\nimport styles from './Dashboard.module.scss';\n\nimport { fetchSubreddits } from '../../Reddit/subreddits';\n\nfunction Dashboard() {\n  const [subreddits, setSubreddits] = useState([]);\n  \n  const fetch = useCallback(() => {\n    const subreddits = fetchSubreddits();\n    setSubreddits(subreddits);\n  }, []);\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  return (\n    <main className={styles.container}>\n      <div className={styles.content}>\n        <DashboardRouter subreddits={subreddits} fetchSubreddits={fetch}/>\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './Dashboard/Dashboard';\n\nfunction ThredditRouter() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route path=\"*\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default ThredditRouter;\n","import React from 'react';\nimport ThredditRouter from './components/ThredditRouter';\n\nfunction App() {\n  return <ThredditRouter />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}