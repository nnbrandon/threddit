{"version":3,"sources":["components/Posts/Posts.module.scss","components/Navbar/Navbar.module.scss","shared/Modal/Modal.module.scss","components/AddSubreddit/AddSubreddit.module.scss","shared/TextInput/TextInput.module.scss","components/Dashboard/Dashboard.module.scss","shared/Button/Button.module.scss","components/Icons/Spinner.module.scss","components/Comments/Comments.module.scss","shared/Button/Button.js","shared/TextInput/TextInput.js","components/Navbar/Navbar.js","components/Comments/PostSection.js","components/Icons/Spinner.js","components/Icons/Hamburger.js","components/Comments/Comment.js","Reddit/comment.js","Reddit/post.js","Reddit/comments.js","components/Comments/CommentsOverview.js","components/Posts/Post.js","components/Posts/InfiniteScroll.js","Reddit/subreddits.js","shared/Modal/Modal.js","components/AddSubreddit/AddSubreddit.js","Reddit/posts.js","components/Posts/PostsView.js","components/Dashboard/DashboardRouter.js","components/Dashboard/Dashboard.js","components/ThredditRouter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","type","onClickEvent","label","className","styles","button","onClick","TextInput","id","locked","focused","value","error","onChange","onKeyPress","useState","active","setActive","inputValue","setInputValue","inputError","setInputError","fieldClassName","field","undefined","placeholder","event","target","onFocus","onBlur","spellCheck","htmlFor","Navbar","navData","selectedSubreddit","onCloseNav","onShowAddSubreddit","inputSubreddit","setInputSubreddit","history","useHistory","subreddit","renderNavData","map","data","index","selectedStyle","path","to","text","sidebar","alt","size","nav","search","console","log","key","preventDefault","push","buttons","buttonLayout","PostSection","renderPostSection","post","title","score","num_comments","prefixedAuthor","getPrefixedAuthor","date","timeSince","previewSource","getPreviewSource","text_html","he","decode","url","href","rel","preview","previewImg","src","subreddit_name_prefixed","postSection","postSectionPreview","textHtml","dangerouslySetInnerHTML","__html","Fragment","Spinner","icon","spinner","Hamburger","Comment","comment","body_html","depth","isMobile","window","screen","width","marginLeft","style","this","author","created_utc","body","commentId","name","parent_id","datePosted","Date","seconds","Math","floor","interval","Post","postId","is_video","subreddit_id","selftext","selftext_html","thumbnail","thumbnail_height","thumbnail_width","height","images","length","source","replace","toLowerCase","fetchComments","fetchPost","a","axios","get","result","status","Error","children","commentsObject","comments","flattenComments","childrenArr","reduce","accum","current","replies","flattenedReplies","getCommentsUrlJSON","CommentsOverview","selectedPost","onCloseComments","match","showNavBar","params","setComments","setPost","virtuosoRef","useRef","commentIndexRef","startIndex","endIndex","currentCommentIndex","didFirstClick","useEffect","document","addEventListener","removeEventListener","commentsUrlJSON","fetch","backArrow","RenderedPostHeader","useCallback","postSectionWrapper","RenderedComment","commentWrapper","LoadingFooter","loading","container","postSectionHeader","hamburger","arrowDown","nextIndex","currentIndex","scrollToIndex","align","behavior","color","commentsContainer","commentsSection","ref","rangeChanged","indices","itemContent","components","Header","Footer","isHome","onClickPost","commentsPath","subredditSection","link","marginTop","InfiniteScroll","postList","loadNextPage","RenderedPost","postWrapper","endReached","fetchSubreddits","sortedSubreddits","Object","keys","localStorage","getItem","sort","b","lowercasedA","lowercasedB","addSubreddit","setItem","isSubscribed","Modal","modalSize","onClose","wrapperRef","innerRef","smallModalBox","normalModalBox","handleClickOutside","contains","modalContainer","AddSubreddit","setSubreddit","layout","closeButton","subredditInput","addButton","fetchPosts","currentAfter","subreddits","filter","replaceAll","substring","requestUrl","after","posts","extractPosts","nextAfter","child","PostsView","setPostList","setAfter","setSelectedPost","setShowNavBar","showAddSubreddit","setShowAddSubreddit","keyCode","renderCommentsOverview","props","subredditText","render","heart","removeItem","removeSubreddit","setTimeout","prevPostList","err","loadMore","DashboardRouter","renderHome","renderSubreddit","exact","Dashboard","setSubreddits","content","ThredditRouter","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","smoothscroll","polyfill","documentElement","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3fb2bf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__3vF_i\",\"posts\":\"Posts_posts__fNhWU\",\"subredditText\":\"Posts_subredditText__cTroL\",\"hamburger\":\"Posts_hamburger__d_e42\",\"link\":\"Posts_link__JEwjG\",\"postWrapper\":\"Posts_postWrapper__5hsp2\",\"loading\":\"Posts_loading__3ZzJ9\",\"post\":\"Posts_post__LyNp_\",\"thumbnail\":\"Posts_thumbnail__OSOEU\",\"selectedPost\":\"Posts_selectedPost__2kv0K\",\"heart\":\"Posts_heart__2tyg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__mwQyv\",\"search\":\"Navbar_search__30ueC\",\"buttons\":\"Navbar_buttons__3W0vS\",\"buttonLayout\":\"Navbar_buttonLayout__2VQ-d\",\"selectedSubreddit\":\"Navbar_selectedSubreddit__zvZa5\",\"nav\":\"Navbar_nav__3cHYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__Nc-xq\",\"modalContainer\":\"Modal_modalContainer__1CKZv\",\"smallModalBox\":\"Modal_smallModalBox__2FFp1\",\"normalModalBox\":\"Modal_normalModalBox__3o1l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"AddSubreddit_layout__2jH53\",\"subredditInput\":\"AddSubreddit_subredditInput__2Ks9l\",\"addButton\":\"AddSubreddit_addButton__3gyg4\",\"closeButton\":\"AddSubreddit_closeButton__3_fe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"TextInput_field__3Nkmt\",\"active\":\"TextInput_active__3dxBt\",\"locked\":\"TextInput_locked___Exol\",\"error\":\"TextInput_error__2rUuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__205D7\",\"content\":\"Dashboard_content__1OVLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__CftuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__-Zzob\",\"spin\":\"Spinner_spin__rZPQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comments_container__2gEP4\",\"commentWrapper\":\"Comments_commentWrapper__KaDj2\",\"commentsContainer\":\"Comments_commentsContainer__3yUU3\",\"hamburger\":\"Comments_hamburger__1FiW_\",\"backArrow\":\"Comments_backArrow__3geJG\",\"loading\":\"Comments_loading__2kYMG\",\"comment\":\"Comments_comment__3yO4C\",\"postSectionWrapper\":\"Comments_postSectionWrapper__2eTTK\",\"postSection\":\"Comments_postSection__1iARa\",\"postSectionHeader\":\"Comments_postSectionHeader__1YSqL\",\"postSectionPreview\":\"Comments_postSectionPreview__39AzW\",\"closeButton\":\"Comments_closeButton__3YHDJ\",\"arrowDown\":\"Comments_arrowDown__3ELnp\",\"previewImg\":\"Comments_previewImg__Xck6t\",\"textHtml\":\"Comments_textHtml__3XLtl\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nfunction Button({type, onClickEvent, label}) {\n    return (\n        <button type=\"submit\" className={styles.button} onClick={onClickEvent}>{label}</button>\n    )\n}\n\nexport default Button;\n","import React, {useState} from 'react';\nimport styles from './TextInput.module.scss';\n\nfunction TextInput({\n    id,\n    type = 'text',\n    locked,\n    focused,\n    value,\n    error,\n    label = '',\n    onChange,\n    onKeyPress\n}) {\n    const [active, setActive] = useState((locked && focused) || false);\n    const [inputValue, setInputValue] = useState(value || '');\n    const [inputError, setInputError] = useState(error || '');\n\n    function onChangeEvent(event) {\n        const value = event.target.value;\n        setInputValue(value);\n        setInputError('');\n        return onChange(id, value);\n    }\n\n    const fieldClassName = `${styles.field} ${(locked ? active : active || value) &&\n        styles.active} ${(locked && !active) ? styles.locked : undefined}`;\n\n    const placeholder = active ? '' : label;\n\n    return (\n        <div className={fieldClassName}>\n            <input\n                id={id}\n                type={type}\n                value={inputValue}\n                placeholder={placeholder}\n                onChange={onChangeEvent}\n                onFocus={() => !locked && setActive(true)}\n                onBlur={() => !locked && setActive(false)}\n                onKeyPress={onKeyPress}\n                spellCheck=\"false\"\n            />\n            <label htmlFor={id} className={error && 'error'}>\n                {inputError || label}\n            </label>\n        </div>\n    )\n}\n\nexport default TextInput;\n","import React, {useState} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { IoIosClose } from 'react-icons/io';\n\nimport styles from './Navbar.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\n\nfunction Navbar({ navData, selectedSubreddit, onCloseNav, onShowAddSubreddit }) {\n  const [inputSubreddit, setInputSubreddit] = useState('');\n  const history = useHistory();\n\n  const subreddit = selectedSubreddit ? '/r/' + selectedSubreddit : '';\n  const renderNavData = navData.map((data, index) => {\n    let selectedStyle;\n    if (\n      subreddit === data.path ||\n      (subreddit === '' && data.path === '/home')\n    ) {\n      selectedStyle = styles.selectedSubreddit;\n    }\n    return (\n      <li key={index}>\n        <Link className={selectedStyle} to={data.path}>\n          {data.text}\n        </Link>\n      </li>\n    );\n  });\n\n  function onChangeSubreddit(id, value) {\n    console.log(value);\n    setInputSubreddit(value);\n  }\n\n  function onKeyPress(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (!inputSubreddit) {\n        history.push('/home');\n      } else {\n        history.push('/r/' + inputSubreddit);\n      }\n    }\n  }\n\n  return (\n    <div className={styles.sidebar}>\n      <span>\n        <IoIosClose alt=\"Close\" onClick={onCloseNav} size=\"50px\" />\n      </span>\n      <nav className={styles.nav}>\n        <form className={styles.search}>\n          <TextInput label=\"Go to Subreddit\" onChange={onChangeSubreddit} onKeyPress={onKeyPress} value={inputSubreddit}/>\n        </form>\n        <ul>{renderNavData}</ul>\n      </nav>\n      <div className={styles.buttons}>\n        <span className={styles.buttonLayout}>\n          <Button onClickEvent={onShowAddSubreddit} label=\"Add Subreddit\"/>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport he from 'he';\n\nimport styles from './Comments.module.scss';\n\nfunction PostSection({ post }) {\n  let renderPostSection;\n  if (post) {\n    const { title, score, num_comments } = post;\n    const prefixedAuthor = post.getPrefixedAuthor();\n    const date = post.timeSince();\n    const previewSource = post.getPreviewSource();\n\n    const text = post.text_html ? he.decode(post.text_html) : undefined;\n    const url = post.url ? (\n      <a href={post.url} target=\"_blank\" rel=\"noreferrer\">\n        {post.url}\n      </a>\n    ) : undefined;\n    const preview = previewSource ? (\n      <img\n        className={styles.previewImg}\n        src={previewSource.url}\n        alt={`${post.subreddit_name_prefixed} - ${post.title}`}\n      />\n    ) : undefined;\n\n    renderPostSection = (\n      <div className={styles.postSection}>\n        <div>\n          r/{post.subreddit} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {url}\n        <br />\n        <div className={styles.postSectionPreview}>{preview}</div>\n        <div\n          className={styles.textHtml}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n\n        <br />\n        <div>\n          {score} score | {num_comments} comments\n        </div>\n      </div>\n    );\n  }\n\n  return <React.Fragment>{renderPostSection}</React.Fragment>;\n}\n\nexport default PostSection;\n","import React from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport styles from './Spinner.module.scss';\n\nfunction Spinner({ size }) {\n  return (\n    <FaSpinner\n      alt=\"Loading...\"\n      icon=\"spinner\"\n      className={styles.spinner}\n      size={'40px' || size}\n    />\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { GiHamburgerMenu } from 'react-icons/gi';\n\nfunction Hamburger({ onClick, size }) {\n  const iconSize = '30px' || size;\n  return <GiHamburgerMenu onClick={onClick} size={iconSize} />;\n}\n\nexport default Hamburger;\n","import React from 'react';\nimport he from 'he';\nimport styles from './Comments.module.scss';\n\nfunction Comment({ comment }) {\n  const { score, body_html, id, depth } = comment;\n  const prefixedAuthor = comment.getPrefixedAuthor();\n  const date = comment.timeSince();\n\n  let text;\n  if (body_html) {\n    text = he.decode(body_html);\n  }\n\n  const isMobile = window.screen.width >= 320 && window.screen.width <= 480;\n  const marginLeft = isMobile ? `${depth * 3.5 + 0}%` : `${depth * 0.8 + 5}%`\n\n  return (\n    <div className={styles.comment} key={id} style={{marginLeft}}>\n      <div>\n        Posted by {prefixedAuthor} {date}\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: text }} />\n      <br />\n      <div>\n        {score} score | Comment depth: {depth}\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","export class Comment {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.body = data.body;\n    this.body_html = data.body_html;\n    this.depth = data.depth;\n    this.id = data.id;\n    this.commentId = data.name;\n    this.parent_id = data.parent_id;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","export class Post {\n  constructor(data) {\n    this.author = data.author;\n    this.created_utc = data.created_utc;\n    this.id = data.id;\n    this.postId = data.name;\n    this.is_video = data.is_video;\n    this.score = data.score;\n    this.subreddit = data.subreddit;\n    this.subreddit_id = data.subreddit_id;\n    this.subreddit_name_prefixed = data.subreddit_name_prefixed;\n    this.title = data.title;\n    this.url = data.url;\n    this.num_comments = data.num_comments;\n    this.text = data.selftext;\n    this.text_html = data.selftext_html;\n    this.preview = data.preview;\n    this.is_video = data.is_video;\n\n    this.thumbnail =\n      data.url && data.thumbnail_height && data.thumbnail_width\n        ? {\n            url: data.thumbnail,\n            height: data.thumbnail_height,\n            width: data.thumbnail_width,\n          }\n        : undefined;\n  }\n\n  getPreviewSource() {\n    if (\n      this.preview &&\n      this.preview.images &&\n      this.preview.images.length > 0 &&\n      !this.is_video\n    ) {\n      const { source } = this.preview.images[0];\n      if (!source) {\n        return undefined;\n      }\n      return {\n        height: source.height,\n        width: source.width,\n        url: source.url.replace('amp;', ''),\n      };\n    }\n    return undefined;\n  }\n\n  getPrefixedAuthor() {\n    return `u/${this.author}`;\n  }\n\n  getLowerCasedSubreddit() {\n    return this.subreddit.toLowerCase();\n  }\n\n  timeSince() {\n    const datePosted = new Date(this.created_utc * 1000);\n\n    var seconds = Math.floor((new Date() - datePosted) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years ago';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months ago';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days ago';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours ago';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes ago';\n    }\n    return Math.floor(seconds) + ' seconds ago';\n  }\n}\n","import axios from 'axios';\nimport { Comment } from './comment';\nimport { Post } from './post';\n\nexport async function fetchComments(url, fetchPost) {\n  let result;\n  try {\n    result = await axios.get(`${url}?limit=50`);\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error('Unable to fetch comments');\n    }\n  } catch (err) {\n    throw new Error('Unable to fetch comments');\n  }\n\n  if (result && result.data) {\n    let post;\n    if (fetchPost) {\n      post = new Post(result.data[0].data.children[0].data); // TODO: Fix hack\n    }\n\n    const commentsObject = result.data[1];\n    if (!commentsObject) {\n      throw new Error('Unable to fetch comments');\n    }\n    const { data } = commentsObject;\n    if (!data) {\n      throw new Error('Unable to fetch comments');\n    }\n\n    const { children } = data;\n    const comments = flattenComments(children);\n    return {\n      post,\n      comments,\n    };\n  }\n}\n\nfunction flattenComments(childrenArr) {\n  return childrenArr.reduce((accum, current) => {\n    const { data } = current;\n    const comment = new Comment(data);\n    if (data.replies) {\n      const { children } = data.replies.data;\n      const flattenedReplies = flattenComments(children);\n      accum.push(comment);\n      accum = [...accum, ...flattenedReplies];\n    } else {\n      accum.push(comment);\n    }\n    return accum;\n  }, []);\n}\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { IoIosArrowBack, IoIosClose, IoIosArrowDropdownCircle as DropdownArray } from 'react-icons/io';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport styles from './Comments.module.scss';\nimport PostSection from './PostSection';\nimport Spinner from '../Icons/Spinner';\nimport Hamburger from '../Icons/Hamburger';\nimport Comment from './Comment';\n\nimport { fetchComments } from '../../Reddit/comments';\n\nfunction getCommentsUrlJSON(subreddit, postId) {\n  return `https://www.reddit.com/r/${subreddit}/comments/${postId}.json`;\n}\n\nfunction CommentsOverview({\n  selectedPost,\n  onCloseComments,\n  match,\n  onCloseNav,\n  showNavBar,\n}) {\n  const { postId, subreddit } = match.params;\n  const [comments, setComments] = useState([]);\n  const [post, setPost] = useState(selectedPost);\n  const virtuosoRef = useRef(null);\n  const commentIndexRef = useRef({\n    startIndex: 0,\n    endIndex: 0\n  });\n  const currentCommentIndex = useRef(0);\n  const didFirstClick = useRef(false);\n\n  useEffect(() => {\n    document.addEventListener('keydown', onCloseComments);\n    return () => {\n      document.removeEventListener('keydown', onCloseComments);\n      setComments([]);\n      setPost(undefined);\n    };\n  }, [onCloseComments]);\n\n  useEffect(() => {\n    async function fetch() {\n      const commentsUrlJSON = getCommentsUrlJSON(subreddit, postId);\n      try {\n        const { post, comments } = await fetchComments(\n          commentsUrlJSON,\n          !selectedPost,\n        );\n      \n        if (!selectedPost) {\n          setPost(post);\n        }\n\n        setComments(comments);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, postId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function scrollToNextComment() {\n    if (virtuosoRef.current) {\n      const currentIndex = currentCommentIndex.current;\n      let nextIndex;\n      if (!didFirstClick.current) {\n        didFirstClick.current = true;\n        nextIndex = currentIndex;\n      } else {\n        nextIndex = currentIndex + 1;\n      }\n\n      for (;nextIndex < comments.length; nextIndex++) {\n        if (comments[nextIndex].depth === 0) {\n          break;\n        }\n      }\n\n      currentCommentIndex.current = nextIndex;\n\n      virtuosoRef.current.scrollToIndex({\n        index: nextIndex,\n        align: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  function setCommentsRange(indices) {\n    commentIndexRef.current = indices\n    const { startIndex, endIndex } = commentIndexRef.current;\n    console.log(commentIndexRef.current);\n    if (currentCommentIndex.current < startIndex || currentCommentIndex.current > endIndex) {\n      console.log('currentCommentIndex is out of range');\n      if (!didFirstClick.current) {\n        didFirstClick.current = true;\n      }\n      currentCommentIndex.current = startIndex;\n    }\n  }\n\n  const backArrow = showNavBar ? (\n    <IoIosArrowBack\n      className={styles.backArrow}\n      alt=\"Back\"\n      onClick={onCloseComments}\n      size=\"30px\"\n    />\n  ) : (\n    <span />\n  );\n  const RenderedPostHeader = useCallback(() => {\n    return (\n      <div className={styles.postSectionWrapper}>\n        <PostSection post={post} onCloseComments={onCloseComments} />\n      </div>\n    );\n  }, [post, onCloseComments]);\n\n  // Render a Comment\n  const RenderedComment = useCallback((index) => {\n    const comment = comments[index]\n    return (\n      <div className={styles.commentWrapper}>\n        {/* <span>{index}</span> */}\n        <Comment\n          key={comment.id}\n          comment={comment}\n        />\n      </div>\n    );\n  }, [comments]);\n\n  const LoadingFooter = useCallback(() => {\n    const spinner = (\n      <div className={styles.loading}>\n        <Spinner />\n      </div>\n    )\n    return spinner;\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postSectionHeader}>\n        <span className={styles.hamburger}>\n          {!showNavBar && <Hamburger onClick={onCloseNav} />}\n          {backArrow}\n        </span>\n        <div>\n          <IoIosClose alt=\"Close\" onClick={onCloseComments} size=\"40px\"/>\n        </div>\n      </div>\n      <div className={styles.arrowDown}>\n        <DropdownArray alt=\"Next Comment\" onClick={scrollToNextComment} size=\"50px\" color=\"#4fbcff\"/>\n      </div>\n      <div className={styles.commentsContainer}>\n        <div className={styles.commentsSection}>\n          <Virtuoso \n            ref={virtuosoRef}\n            rangeChanged={setCommentsRange}\n            style={{height: \"100vh\", width: \"100%\"}}\n            data={comments}\n            itemContent={RenderedComment}\n            components={{\n              Header: RenderedPostHeader,\n              Footer: LoadingFooter\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentsOverview;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Posts.module.scss';\n\nfunction Post({ isHome, post, onClickPost }) {\n  const { title, score, num_comments } = post;\n  const prefixedAuthor = post.getPrefixedAuthor();\n  const date = post.timeSince();\n  const commentsPath = isHome\n    ? `/home/r/${post.subreddit}/comments/${post.id}`\n    : `/r/${post.subreddit}/comments/${post.id}`;\n\n  let thumbnail;\n  if (post.thumbnail) {\n    const { url, height, width } = post.thumbnail;\n    thumbnail = (\n      <div className={styles.thumbnail}>\n        <img src={url} width={width} height={height} alt=\"\" />\n      </div>\n    );\n  }\n\n  const subredditSection = isHome ? post.subreddit_name_prefixed : undefined;\n\n  return (\n    <article className={styles.post} onClick={() => onClickPost(post)}>\n      <Link className={styles.link} to={commentsPath}>\n        <div>\n          {subredditSection} Posted by {prefixedAuthor} {date}\n        </div>\n        <h3>{title}</h3>\n        {thumbnail}\n        <div style={{marginTop: 'auto'}}>\n          {score} score | {num_comments} comments\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nexport default Post;\n","import React, { useCallback } from 'react';\nimport { Virtuoso } from 'react-virtuoso'\n\nimport Post from './Post';\nimport Spinner from '../Icons/Spinner';\nimport styles from './Posts.module.scss';\n\nfunction InfiniteScroll({\n  isHome,\n\n  // Array of items loaded so far.\n  postList,\n\n  // Callback function responsible for loading the next page of items.\n  loadNextPage,\n\n  onClickPost,\n}) {\n  // Render a Post\n  const RenderedPost = useCallback((index) => {\n    const post = postList[index]\n    return (\n      <div className={styles.postWrapper}>\n      <Post\n        isHome={isHome}\n        key={post.id}\n        post={post}\n        onClickPost={onClickPost}\n      />\n    </div>\n    );\n  }, [isHome, onClickPost, postList]);\n\n  const LoadingFooter = useCallback(() => {\n    return (\n      <div className={`${styles.loading}`}>\n        <Spinner />\n      </div>\n    )\n  }, []);\n\n  return (\n    <Virtuoso\n      style={{height: \"100vh\", width: \"100%\"}}\n      data={postList}\n      endReached={loadNextPage}\n      itemContent={RenderedPost}\n      components={{\n        Footer: LoadingFooter\n      }}\n    />\n  );\n}\n\nexport default InfiniteScroll;\n","\nexport function fetchSubreddits() {\n  const localStorageSubreddits = Object.keys(localStorage).map(key => {\n    return {\n      path: localStorage.getItem(key),\n      text: key,\n    };\n  })\n  const sortedSubreddits = localStorageSubreddits.sort((a, b) => {\n    const lowercasedA = a.text.toLowerCase();\n    const lowercasedB = b.text.toLowerCase();\n\n    if (lowercasedA < lowercasedB) {\n      return -1;\n    }\n\n    if (lowercasedA > lowercasedB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  const subreddits = [{\n    path: '/home',\n    text: 'Home',\n  }, ...sortedSubreddits];\n\n  return subreddits;\n}\n\nexport function addSubreddit(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    localStorage.setItem(subreddit, '/r/' + subreddit);\n  }\n}\n\nexport function removeSubreddit(subreddit) {\n  localStorage.removeItem(subreddit);\n}\n\nexport function isSubscribed(subreddit) {\n  if (!localStorage.getItem(subreddit)) {\n    return false;\n  }\n\n  return true;\n}\n","import React, {useEffect, useRef} from 'react';\n\nimport styles from './Modal.module.scss';\n\nfunction Modal({children, onClose, size}) {\n    const wrapperRef = useRef(null);\n    const innerRef = useRef(null);\n\n    let modalSize\n    switch (size) {\n        case \"small\":\n            modalSize = styles.smallModalBox;\n            break;\n        case \"normal\":\n            modalSize = styles.normalModalBox;\n            break;\n        default:\n            modalSize = styles.normalModalBox;\n            break;\n    }\n    \n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (wrapperRef.current && wrapperRef.current.contains(event.target)\n                && innerRef.current && !innerRef.current.contains(event.target)) {\n                onClose();\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [wrapperRef, innerRef, onClose]);\n\n    return (\n        <div ref={wrapperRef} className={styles.container}>\n            <div className={styles.modalContainer}>\n                <div ref={innerRef} className={modalSize}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { IoIosClose } from 'react-icons/io';\n\nimport { addSubreddit } from '../../Reddit/subreddits';\nimport styles from './AddSubreddit.module.scss';\nimport Button from '../../shared/Button/Button';\nimport TextInput from '../../shared/TextInput/TextInput';\nimport Modal from '../../shared/Modal/Modal';\n\nfunction AddSubreddit({onClose, fetchSubreddits}) {\n    const [subreddit, setSubreddit] = useState('');\n\n    function onChangeSubreddit(id, value) {\n        setSubreddit(value);\n    }\n\n    function onClick(event) {\n        event.preventDefault();\n        addSubreddit(subreddit);\n        fetchSubreddits();\n        onClose();\n    }\n\n    return (\n        <Modal onClose={onClose} size=\"small\">\n            <form className={styles.layout}>\n                <span className={styles.closeButton}>\n                    <IoIosClose alt=\"Close\" onClick={onClose} size=\"40px\" />\n                </span>\n                <div className={styles.subredditInput}>\n                    <TextInput label=\"Subreddit\" onChange={onChangeSubreddit}/>\n                </div>\n                <div className={styles.addButton}>\n                    <Button type=\"submit\" label=\"Add\" onClickEvent={onClick}/>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AddSubreddit;\n","import axios from 'axios';\n\nimport { Post } from './post';\nimport { fetchSubreddits } from './subreddits';\n\nexport async function fetchPosts(subreddit, currentAfter) {\n  if (!subreddit) {\n    const subreddits = fetchSubreddits().filter(subreddit => subreddit.text !== 'Home');\n\n    if (!subreddits.length) {\n      subreddit = 'all';  \n    } else {\n      subreddit = `${subreddits.map(subreddit => subreddit.text + '+')}`;\n      subreddit = subreddit.replaceAll(',', \"\").substring(0, subreddit.length - 1);\n    }\n  }\n\n  const requestUrl = `https://www.reddit.com/r/${subreddit}.json?after=${currentAfter}&limit=15`\n  let result;\n  try {\n    result = await axios.get(requestUrl);\n    console.log(result);\n    if (result.status !== 200) {\n      throw new Error(`Unable to fetch posts for ${subreddit}`);\n    }\n  } catch (err) {\n    throw new Error(`Unable to fetch posts for ${subreddit}`);\n  }\n\n  if (result && result.data && result.data.data) {\n    const { children, after } = result.data.data;\n    const posts = extractPosts(children);\n    return {\n      posts,\n      nextAfter: after,\n    };\n  }\n}\n\nfunction extractPosts(children) {\n  return children.map((child) => new Post(child.data));\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Route, useHistory } from 'react-router';\nimport {IoHeartSharp, IoHeartOutline} from 'react-icons/io5'\n\nimport styles from './Posts.module.scss';\nimport Navbar from '../Navbar/Navbar';\nimport CommentsOverview from '../Comments/CommentsOverview';\nimport InfiniteScroll from './InfiniteScroll';\nimport Hamburger from '../Icons/Hamburger';\nimport AddSubreddit from '../AddSubreddit/AddSubreddit';\n\nimport { fetchPosts } from '../../Reddit/posts';\nimport { addSubreddit, removeSubreddit, isSubscribed } from '../../Reddit/subreddits';\n\nfunction PostsView({ match, isHome, subreddits, fetchSubreddits }) {\n  const { subreddit } = match.params;\n  const [postList, setPostList] = useState([]);\n  const [after, setAfter] = useState('');\n  const [selectedPost, setSelectedPost] = useState(undefined);\n  const history = useHistory();\n\n  const [showNavBar, setShowNavBar] = useState(true);\n  const [showAddSubreddit, setShowAddSubreddit] = useState(false);\n\n  function _loadNextPage(...args) {\n    function loadMore(subreddit, after) {\n      try {\n        setTimeout(async () => {\n          const { posts, nextAfter } = await fetchPosts(subreddit, after);\n          setPostList((prevPostList) => [...prevPostList, ...posts]);\n          setAfter(nextAfter);\n        }, 1000);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    loadMore(subreddit, after);\n  }\n\n  const commentsPath = isHome\n    ? '/home/r/:subreddit/comments/:postId'\n    : '/r/:subreddit/comments/:postId';\n\n  useEffect(() => {\n    async function fetch(subreddit, after) {\n      try {\n        const { posts, nextAfter } = await fetchPosts(subreddit, after);\n        setPostList(posts);\n        setAfter(nextAfter);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetch(subreddit, '');\n\n    return () => {\n      setSelectedPost(undefined);\n      setPostList([]);\n      setAfter('');\n      console.log('subreddit changed in postsview');\n    };\n  }, [subreddit]);\n\n  function onClickPost(post) {\n    console.log(post);\n    setSelectedPost(post);\n  }\n\n  const onCloseNav = useCallback(() => {\n    setShowNavBar(!showNavBar);\n  }, [showNavBar]);\n\n  function onShowAddSubreddit() {\n    setShowAddSubreddit(!showAddSubreddit);\n  }\n\n  function subscribeToSubreddit() {\n    addSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  function unsubscribeToSubreddit() {\n    console.log('test');\n    removeSubreddit(subreddit);\n    fetchSubreddits();\n  }\n\n  const onCloseComments = useCallback((event) => {\n    if (event.keyCode === 27 || event.type === 'click') {\n      setSelectedPost(undefined);\n      if (isHome) {\n        history.push('/home');\n      } else {\n        history.push(`/r/${subreddit}`);\n      }\n    }\n  }, [history, isHome, subreddit]);\n\n  const renderCommentsOverview = useCallback((props) => {\n    return (<CommentsOverview\n      {...props}\n      onCloseNav={onCloseNav}\n      showNavBar={showNavBar}\n      selectedPost={selectedPost}\n      onCloseComments={onCloseComments}\n    />);\n  }, [onCloseNav, onCloseComments, showNavBar, selectedPost]);\n\n  const subredditText = isHome ? <div>Home</div> : <div>r/{subreddit}</div>;\n  return (\n    <div className={styles.container}>\n      {showNavBar && (\n        <Navbar\n          navData={subreddits}\n          selectedSubreddit={subreddit}\n          onCloseNav={onCloseNav}\n          onShowAddSubreddit={onShowAddSubreddit}\n        />\n      )}\n      <div className={styles.posts}>\n        <Route\n          path={commentsPath}\n          render={renderCommentsOverview}\n        />\n        {showAddSubreddit && (\n          <AddSubreddit onClose={onShowAddSubreddit} fetchSubreddits={fetchSubreddits}/>\n        )}\n        <div className={styles.subredditText}>\n          {!showNavBar && (\n            <span className={styles.hamburger}>\n              <Hamburger onClick={onCloseNav} />\n            </span>\n          )}\n          <h3>\n            <i>{subredditText}</i>\n          </h3>\n          {!isHome && <span className={styles.heart}>\n            {isSubscribed(subreddit) ? (\n              <IoHeartSharp size=\"30px\" color=\"rgb(249, 24, 128)\" onClick={unsubscribeToSubreddit}/>\n            ) : (\n              <IoHeartOutline size=\"30px\" onClick={subscribeToSubreddit}/>\n            )}\n          </span>}\n        </div>\n        <InfiniteScroll\n          isHome={isHome}\n          postList={postList}\n          loadNextPage={_loadNextPage}\n          onClickPost={onClickPost}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PostsView;\n","import React, { useCallback } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport PostsView from '../Posts/PostsView';\n\nfunction DashboardRouter({ subreddits, fetchSubreddits }) {\n  const renderHome = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={true} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    );\n  }, [subreddits, fetchSubreddits]);\n\n  const renderSubreddit = useCallback((props) => {\n    return (\n      <PostsView {...props} isHome={false} subreddits={subreddits} fetchSubreddits={fetchSubreddits}/>\n    )\n  }, [subreddits, fetchSubreddits]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n      <Route\n        path={'/home'}\n        render={renderHome}\n      />\n      <Route\n        path={'/r/:subreddit'}\n        render={renderSubreddit}\n      />\n    </Switch>\n  );\n}\n\nexport default DashboardRouter;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport DashboardRouter from './DashboardRouter';\nimport styles from './Dashboard.module.scss';\n\nimport { fetchSubreddits } from '../../Reddit/subreddits';\n\nfunction Dashboard() {\n  const [subreddits, setSubreddits] = useState([]);\n  \n  const fetch = useCallback(() => {\n    const subreddits = fetchSubreddits();\n    setSubreddits(subreddits);\n  }, []);\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  return (\n    <main className={styles.container}>\n      <div className={styles.content}>\n        <DashboardRouter subreddits={subreddits} fetchSubreddits={fetch}/>\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './Dashboard/Dashboard';\n\nfunction ThredditRouter() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route path=\"*\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default ThredditRouter;\n","import React from 'react';\nimport ThredditRouter from './components/ThredditRouter';\n\nfunction App() {\n  return <ThredditRouter />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n(async function() {\n  console.log('polyfill');\n  smoothscroll.polyfill();\n\n  if (!(\"scrollBehavior\" in document.documentElement.style)) {\n    await import('smoothscroll-anchor-polyfill');\n  }\n})();\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}